pipeline {
    agent {
        node {
            label 'agent'
        }
    }
    // environment {
    //     GREETINGS = "Hello jenkins"
    // }
    options {
        timeout(time: 1, unit: 'HOURS')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Pick something')
        
    }
    stages {
        stage('Init') {
            steps {
                sh """
                cd 01-vpc
                terraform init -reconfigure
                """
            }
        }
        stage('Plan') {
            steps {
                sh """
                cd 01-vpc
                terraform plan
                """
            }
        }
        stage('Deploy') {
            when {
                expression {
                    params.action == 'apply'
                }
            }
            input {
                message "Should we continue?"
                ok "Yes, we should."
                // submitter "alice,bob"
                // parameters {
                //     string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
                // }
            }
            steps {
                sh """
                cd 01-vpc
                terraform apply -auto-approve
                """
            }
        }
        // stage('Destroy') {
        //     when {
        //         expression {
        //             params.action == 'destroy'
        //         }
        //     }
        //     input {
        //         message "Should we continue?"
        //         ok "Yes, we should."
        //         // submitter "alice,bob"
        //         // parameters {
        //         //     string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
        //         // }
        //     }
        //     steps {
        //         sh """
        //         cd 01-vpc
        //         terraform destroy -auto-approve
        //         """
        //     }
        // }
        
    
    
    }
    post {
        always {
            echo 'I will say hello'
        }
        failure {
            echo 'This will run when pipeline is failed'
         }
        success {
            echo 'I will  say hello when pipeline is success'
        }
    }
}

